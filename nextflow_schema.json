{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://raw.githubusercontent.com/imrank11/trybamcmp/main/nextflow_schema.json",
  "title": "nf-core/bamcmp pipeline parameters",
  "description": "Pipeline to run bamcmp on paired BAM files (primary vs contaminant)",
  "type": "object",

  "$defs": {
    "input_output_options": {
      "title": "Input/output options",
      "type": "object",
      "fa_icon": "fas fa-terminal",
      "description": "Define where the pipeline should find input data and save output data.",
      "required": ["input", "outdir"],
      "properties": {
        "input": {
          "type": "string",
          "format": "file-path",
          "exists": true,
          "schema": "assets/schema_input.json",
          "mimetype": "text/csv",
          "pattern": "^\\S+\\.csv$",
          "description": "Path to comma-separated file containing paired BAMs (sample,bam_1,bam_2).",
          "help_text": "The CSV file must contain three columns with headers: sample,bam_1,bam_2. Each row defines one comparison between a primary BAM and a contaminant BAM file.",
          "fa_icon": "fas fa-file-csv"
        },
        "outdir": {
          "type": "string",
          "format": "directory-path",
          "description": "The output directory where results will be saved.",
          "fa_icon": "fas fa-folder-open"
        },
        "email": {
          "type": "string",
          "description": "Email address for completion summary.",
          "fa_icon": "fas fa-envelope",
          "help_text": "Set this to receive a summary email when the workflow finishes.",
          "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
        },
        "multiqc_title": {
          "type": "string",
          "description": "MultiQC report title.",
          "fa_icon": "fas fa-file-signature"
        }
      }
    },

    "reference_genome_options": {
      "title": "Reference genome options",
      "type": "object",
      "fa_icon": "fas fa-dna",
      "description": "Reference genome parameters (optional for bamcmp).",
      "properties": {
        "genome": {
          "type": "string",
          "description": "Name of iGenomes reference.",
          "fa_icon": "fas fa-book"
        },
        "fasta": {
          "type": "string",
          "format": "file-path",
          "exists": true,
          "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
          "description": "Path to FASTA genome file.",
          "fa_icon": "far fa-file-code"
        },
        "igenomes_ignore": {
          "type": "boolean",
          "description": "Do not load the iGenomes reference config.",
          "fa_icon": "fas fa-ban",
          "hidden": true
        },
        "igenomes_base": {
          "type": "string",
          "format": "directory-path",
          "description": "Base path to iGenomes references.",
          "fa_icon": "fas fa-folder",
          "default": "s3://ngi-igenomes/igenomes/"
        }
      }
    },

    "institutional_config_options": {
      "title": "Institutional config options",
      "type": "object",
      "fa_icon": "fas fa-university",
      "description": "Standard nf-core institutional config parameters.",
      "properties": {
        "custom_config_version": {
          "type": "string",
          "default": "master",
          "hidden": true
        },
        "custom_config_base": {
          "type": "string",
          "default": "https://raw.githubusercontent.com/nf-core/configs/master",
          "hidden": true
        },
        "config_profile_name": { "type": "string", "hidden": true },
        "config_profile_description": { "type": "string", "hidden": true },
        "config_profile_contact": { "type": "string", "hidden": true },
        "config_profile_url": { "type": "string", "hidden": true }
      }
    },

    "generic_options": {
      "title": "Generic options",
      "type": "object",
      "fa_icon": "fas fa-cogs",
      "description": "Common nf-core pipeline settings.",
      "properties": {
        "version": {
          "type": "boolean",
          "description": "Display version and exit.",
          "hidden": true
        },
        "publish_dir_mode": {
          "type": "string",
          "default": "copy",
          "description": "PublishDir method for results.",
          "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
          "hidden": true
        },
        "email_on_fail": {
          "type": "string",
          "description": "Email address if pipeline fails.",
          "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
          "hidden": true
        },
        "plaintext_email": {
          "type": "boolean",
          "description": "Send plain-text email instead of HTML.",
          "hidden": true
        },
        "multiqc_config": {
          "type": "string",
          "format": "file-path",
          "description": "Custom MultiQC configuration file.",
          "hidden": true
        },
        "multiqc_logo": {
          "type": "string",
          "description": "Custom MultiQC logo.",
          "hidden": true
        },
        "multiqc_methods_description": {
          "type": "string",
          "description": "Custom MultiQC methods YAML file.",
          "fa_icon": "fas fa-cog"
        },
        "validate_params": {
          "type": "boolean",
          "default": true,
          "description": "Validate parameters against schema at runtime.",
          "hidden": true
        },
        "help": {
          "type": ["boolean", "string"],
          "description": "Display help message."
        },
        "help_full": {
          "type": "boolean",
          "description": "Display full help message."
        },
        "show_hidden": {
          "type": "boolean",
          "description": "Show hidden parameters in help output."
        }
      }
    }
  },

  "allOf": [
    { "$ref": "#/$defs/input_output_options" },
    { "$ref": "#/$defs/reference_genome_options" },
    { "$ref": "#/$defs/institutional_config_options" },
    { "$ref": "#/$defs/generic_options" }
  ]
}
